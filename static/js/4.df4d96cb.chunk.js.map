{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Modal/Modal.module.css","redux/contacts/contacts-selectors.js","images/delete.svg","components/ContactList/ContactList.js","components/Filter/Filter.js","images/add.svg","components/ContactForm/ContactForm.js","components/Modal/Modal.js","components/Page/ContactsPage.js","components/Page/Pages.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","getItems","state","contacts","items","getFilter","filter","contactSelectors","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","number","includes","ContactList","useSelector","dispatch","useDispatch","useEffect","contactsOperations","getAllContacts","className","s","list","map","item","id","Button","variant","btn__delete","type","onClick","removeContact","src","deleteIcon","alt","Filter","value","label","input","onChange","event","target","ContactForm","onHide","useForm","register","handleSubmit","reset","form","onSubmit","data","newName","find","console","log","addContact","pattern","title","placeholder","required","btn","addIcon","MyVerticallyCenteredModal","props","Modal","size","centered","Header","header","closeButton","Title","Body","ModalSAddContact","useState","modalShow","setModalShow","show","ContactsPage","contactsPage"],"mappings":"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","file":"static/js/4.df4d96cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Modal_title__kbqpq\"};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getItems = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\n//  const getFilteredContacts = state => {\n//   const contacts = getItems(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n//   return (\n//     contacts &&\n//     contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n//   );\n// };\n\n// миминизация\nconst getFilteredContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.includes(filter),\n    );\n  },\n);\n\nconst contactSelectors = {\n  getItems,\n  getFilter,\n  getFilteredContacts,\n};\n\nexport default contactSelectors;\n","export default __webpack_public_path__ + \"static/media/delete.68aade56.svg\";","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport contactSelectors from '../../redux/contacts/contacts-selectors';\nimport deleteIcon from '../../images/delete.svg';\nimport { Button } from 'react-bootstrap';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(contactSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(contactsOperations.getAllContacts()), [dispatch]);\n\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts?.map(item => {\n          const { id, name, number } = item;\n          return (\n            <li key={id} className={s.item}>\n              {name}: {number}\n              <Button\n                variant=\"danger\"\n                className={s.btn__delete}\n                type=\"button\"\n                onClick={() => dispatch(contactsOperations.removeContact(id))}\n              >\n                <img src={deleteIcon} alt=\"\" />\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value }) => {\n  const dispatch = useDispatch();\n  const onChange = event => {\n    dispatch(contactsOperations.filter(event.target.value));\n  };\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","export default __webpack_public_path__ + \"static/media/add.338a897d.svg\";","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport contactSelectors from '../../redux/contacts/contacts-selectors';\nimport { Button } from 'react-bootstrap';\nimport addIcon from '../../images/add.svg';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onHide }) => {\n  const contacts = useSelector(contactSelectors.getItems);\n  const { register, handleSubmit, reset } = useForm();\n  const dispatch = useDispatch();\n\n  const checkForReplays = newName => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === newName.toLowerCase(),\n    );\n  };\n  const onSubmit = data => {\n    if (checkForReplays(data.name)) {\n      console.log('replays');\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(data));\n    onHide();\n    reset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n      <input\n        className={s.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        placeholder=\"name\"\n        {...register('name', {\n          required: true,\n        })}\n      />\n      <input\n        className={s.input}\n        placeholder=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        {...register('number', {\n          required: true,\n        })}\n      />\n      <Button variant=\"success\" className={s.btn} type=\"submit\">\n        <img src={addIcon} alt=\"add new contact button\" />\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport ContactForm from '../ContactForm';\nimport s from './Modal.module.css';\nconst MyVerticallyCenteredModal = props => {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header className={s.header} closeButton>\n        <Modal.Title className={s.title}>Add new contact</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <ContactForm {...props} />\n      </Modal.Body>\n    </Modal>\n  );\n};\nconst ModalSAddContact = () => {\n  const [modalShow, setModalShow] = useState(false);\n\n  return (\n    <>\n      <Button variant=\"success\" onClick={() => setModalShow(true)}>\n        ADD CONTACT\n      </Button>\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n};\nexport default ModalSAddContact;\n","import ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport ModalSAddContact from '../Modal/Modal';\n\nimport s from './Pages.module.css';\nconst ContactsPage = () => {\n  return (\n    <div className={s.contactsPage}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ModalSAddContact />\n\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_box\":\"Pages_btn_box__2tvCo\",\"btn\":\"Pages_btn__3bwiY\",\"link\":\"Pages_link__2TX2g\",\"form\":\"Pages_form__-Lmi5\",\"input\":\"Pages_input__2od8o\",\"notification--error\":\"Pages_notification--error__2muRg\",\"btn_user\":\"Pages_btn_user__3gwSs\",\"icon\":\"Pages_icon__2wZhK\",\"contactsPage\":\"Pages_contactsPage__GJtCM\",\"title\":\"Pages_title__3gw06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn__delete\":\"ContactList_btn__delete__2u4p9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}