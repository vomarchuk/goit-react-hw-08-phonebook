{"version":3,"sources":["images/send.svg","components/Page/RegisterPage.js","components/Page/Pages.module.css","validationSchemas/emailPattern.js"],"names":["RegisterPage","dispatch","useDispatch","useForm","register","getValues","handleSubmit","reset","watch","errors","formState","password","useRef","current","className","s","form","onSubmit","data","authOperations","userRegister","input","placeholder","required","pattern","value","emailPattern","message","email","autoComplete","type","minLength","validate","password_repeat","Button","btn_user","variant","icon","src","sendIcon","alt","module","exports"],"mappings":"wMAAe,MAA0B,iC,gCC0F1BA,UAjFM,WACnB,IAAMC,EAAWC,cACjB,EAOIC,cANFC,EADF,EACEA,SACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,MACaC,EANf,EAMEC,UAAaD,OAGTE,EAAWC,iBAAO,IACxBD,EAASE,QAAUL,EAAM,WAAY,IAOrC,OACE,uBAAMM,UAAWC,IAAEC,KAAMC,SAAUX,GANpB,SAAAY,GACfjB,EAASkB,IAAeC,aAAaF,IACrCX,OAIA,UACE,mCACEO,UAAWC,IAAEM,MACbC,YAAY,QACRlB,EAAS,OAAQ,CAAEmB,UAAU,MAEnC,mCACET,UAAWC,IAAEM,MACbC,YAAY,UACRlB,EAAS,QAAS,CACpBmB,UAAU,EACVC,QAAS,CACPC,MAAOC,IACPC,QAAQ,oCAIblB,EAAOmB,OAASvB,EAAU,UACzB,mBAAGS,UAAWC,IAAE,uBAAhB,SAAyCN,EAAOmB,MAAMD,UAGxD,mCACEb,UAAWC,IAAEM,MACbQ,aAAa,MACbC,KAAK,WACLR,YAAY,YACRlB,EAAS,WAAY,CACvBmB,SAAU,8BACVQ,UAAW,CACTN,MAAO,EACPE,QAAS,gDAIdlB,EAAOE,UACN,mBAAGG,UAAWC,IAAE,uBAAhB,SAAyCN,EAAOE,SAASgB,UAG3D,mCACEb,UAAWC,IAAEM,MACbQ,aAAa,MACbC,KAAK,WACLR,YAAY,mBACRlB,EAAS,kBAAmB,CAC9B4B,SAAU,SAAAP,GAAK,OACbA,IAAUd,EAASE,SAAW,kCAGnCJ,EAAOwB,iBACN,mBAAGnB,UAAWC,IAAE,uBAAhB,SACGN,EAAOwB,gBAAgBN,UAI5B,eAACO,EAAA,EAAD,CAAQpB,UAAWC,IAAEoB,SAAUC,QAAQ,UAAUN,KAAK,SAAtD,qBAEE,qBAAKhB,UAAWC,IAAEsB,KAAMC,IAAKC,EAAUC,IAAI,4B,mBCpFnDC,EAAOC,QAAU,CAAC,QAAU,uBAAuB,IAAM,mBAAmB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,qBAAqB,sBAAsB,mCAAmC,SAAW,wBAAwB,KAAO,oBAAoB,aAAe,4BAA4B,MAAQ,uB,kECDzU,IAEehB,EADb","file":"static/js/7.ccd1f6a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/send.0ca86cc6.svg\";","import { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\nimport { Button } from 'react-bootstrap';\nimport sendIcon from '../../images/send.svg';\nimport emailPattern from '../../validationSchemas';\nimport s from './Pages.module.css';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    getValues,\n    handleSubmit,\n    reset,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const onSubmit = data => {\n    dispatch(authOperations.userRegister(data));\n    reset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n      <input\n        className={s.input}\n        placeholder=\"name\"\n        {...register('name', { required: true })}\n      />\n      <input\n        className={s.input}\n        placeholder=\"e-mail\"\n        {...register('email', {\n          required: true,\n          pattern: {\n            value: emailPattern,\n            message: `Is not a valid email address`,\n          },\n        })}\n      />\n      {errors.email && getValues('email') && (\n        <p className={s['notification--error']}>{errors.email.message}</p>\n      )}\n\n      <input\n        className={s.input}\n        autoComplete=\"off\"\n        type=\"password\"\n        placeholder=\"password\"\n        {...register('password', {\n          required: 'You must specify a password',\n          minLength: {\n            value: 8,\n            message: 'Password must have at least 8 characters',\n          },\n        })}\n      />\n      {errors.password && (\n        <p className={s['notification--error']}>{errors.password.message}</p>\n      )}\n\n      <input\n        className={s.input}\n        autoComplete=\"off\"\n        type=\"password\"\n        placeholder=\"repeat password\"\n        {...register('password_repeat', {\n          validate: value =>\n            value === password.current || 'The passwords do not match',\n        })}\n      />\n      {errors.password_repeat && (\n        <p className={s['notification--error']}>\n          {errors.password_repeat.message}\n        </p>\n      )}\n\n      <Button className={s.btn_user} variant=\"success\" type=\"submit\">\n        Register\n        <img className={s.icon} src={sendIcon} alt=\"register button\" />\n      </Button>\n    </form>\n  );\n};\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_box\":\"Pages_btn_box__2tvCo\",\"btn\":\"Pages_btn__3bwiY\",\"link\":\"Pages_link__2TX2g\",\"form\":\"Pages_form__-Lmi5\",\"input\":\"Pages_input__2od8o\",\"notification--error\":\"Pages_notification--error__2muRg\",\"btn_user\":\"Pages_btn_user__3gwSs\",\"icon\":\"Pages_icon__2wZhK\",\"contactsPage\":\"Pages_contactsPage__GJtCM\",\"title\":\"Pages_title__3gw06\"};","const emailPattern =\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport default emailPattern;\n"],"sourceRoot":""}